name: ROS

on:
  push:
    branches: [foxy, melodic]
  workflow_dispatch:
    
jobs:
  test:
    runs-on: ubuntu-latest
    container: athackst/ros:melodic-gazebo-nvidia
    steps:
      - uses: actions/checkout@v2
      - name: "Get workspace"
        run: |
          if [ -f src/ros_melodic.rosinstall ]; then
            vcs import --skip-existing < ros_melodic.rosinstall
          fi
      - name: "Get dependencies"
        run: |
          sudo apt-get update
          rosdep update
          rosdep install --from-paths ./src -y -i -r --skip-keys="abb_rws_interface"
      - name: "Build"
        run: |
          catkin build -v --cmake-args -DCMAKE_C_FLAGS="-Wall -W -Wno-unused-parameter"
        continue-on-error: true
      - name: "Test"
        run: |
          catkin_make run_tests
  lint:
    name: ament_${{ matrix.linter }}
    runs-on: ubuntu-latest
    container: athackst/ros2:melodic-gazebo-nvidia
    strategy:
      fail-fast: false
      matrix:
          linter: [cppcheck, cpplint, uncrustify, lint_cmake, xmllint, flake8, pep257]
    steps:
      - uses: actions/checkout@v2
      - name: "Get workspace"
        run: |
          if [ -f src/ros2.repos ]; then
            vcs import --skip-existing < ros_melodic.rosinstall
          fi
      - name: "run linter"
        run: |
          ament_${{ matrix.linter }} src/
